/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2020-09-17 08:43:04 EDT)
 * on 2020-09-17 at 12:43:15 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.businesscommunications.v1;

/**
 * Service definition for BusinessCommunications (v1).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="http://tobedone" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BusinessCommunicationsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class BusinessCommunications extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.25.0-SNAPSHOT of the Business Communications library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://businesscommunications.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public BusinessCommunications(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  BusinessCommunications(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Brands collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BusinessCommunications businesscommunications = new BusinessCommunications(...);}
   *   {@code BusinessCommunications.Brands.List request = businesscommunications.brands().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Brands brands() {
    return new Brands();
  }

  /**
   * The "brands" collection of methods.
   */
  public class Brands {

    /**
     * Creates a new brand.
     *
     * Create a request for the method "brands.create".
     *
     * This request holds the parameters needed by the businesscommunications server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.businesscommunications.v1.model.Brand}
     * @return the request
     */
    public Create create(com.google.api.services.businesscommunications.v1.model.Brand content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Brand> {

      private static final String REST_PATH = "v1/brands";

      /**
       * Creates a new brand.
       *
       * Create a request for the method "brands.create".
       *
       * This request holds the parameters needed by the the businesscommunications server.  After
       * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.Brand}
       * @since 1.13
       */
      protected Create(com.google.api.services.businesscommunications.v1.model.Brand content) {
        super(BusinessCommunications.this, "POST", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.Brand.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a brand. If the brand has any associated agents or locations, the delete request fails
     * unless `force` is `true`.
     *
     * Create a request for the method "brands.delete".
     *
     * This request holds the parameters needed by the businesscommunications server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
     *        resolves to "brands/1234".
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Empty> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^brands/[^/]+$");

      /**
       * Deletes a brand. If the brand has any associated agents or locations, the delete request fails
       * unless `force` is `true`.
       *
       * Create a request for the method "brands.delete".
       *
       * This request holds the parameters needed by the the businesscommunications server.  After
       * setting any optional parameters, call the {@link Delete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
     *        resolves to "brands/1234".
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(BusinessCommunications.this, "DELETE", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^brands/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The unique identifier of the brand. If the brand identifier is "1234", this
       * parameter resolves to "brands/1234".
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
     resolves to "brands/1234".
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The unique identifier of the brand. If the brand identifier is "1234", this
       * parameter resolves to "brands/1234".
       */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^brands/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /** If true, any agents and locations associated with this brand are also deleted. */
      @com.google.api.client.util.Key
      private java.lang.Boolean force;

      /** If true, any agents and locations associated with this brand are also deleted.
       */
      public java.lang.Boolean getForce() {
        return force;
      }

      /** If true, any agents and locations associated with this brand are also deleted. */
      public Delete setForce(java.lang.Boolean force) {
        this.force = force;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets information about a brand.
     *
     * Create a request for the method "brands.get".
     *
     * This request holds the parameters needed by the businesscommunications server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
     *        resolves to "brands/1234".
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Brand> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^brands/[^/]+$");

      /**
       * Gets information about a brand.
       *
       * Create a request for the method "brands.get".
       *
       * This request holds the parameters needed by the the businesscommunications server.  After
       * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
       * operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
     *        resolves to "brands/1234".
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.Brand.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^brands/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The unique identifier of the brand. If the brand identifier is "1234", this
       * parameter resolves to "brands/1234".
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
     resolves to "brands/1234".
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The unique identifier of the brand. If the brand identifier is "1234", this
       * parameter resolves to "brands/1234".
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^brands/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists all the brands accessible to the user making the request. *Note*: This method always sets
     * `pageSize` to `0`.
     *
     * Create a request for the method "brands.list".
     *
     * This request holds the parameters needed by the businesscommunications server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.ListBrandsResponse> {

      private static final String REST_PATH = "v1/brands";

      /**
       * Lists all the brands accessible to the user making the request. *Note*: This method always sets
       * `pageSize` to `0`.
       *
       * Create a request for the method "brands.list".
       *
       * This request holds the parameters needed by the the businesscommunications server.  After
       * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
       * operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.ListBrandsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Specify the maximum number of results to be returned by the server. The server may further
       * constrain the maximum number of results returned in a single page. If the page_size is 0,
       * the server will decide the number of results to be returned.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Specify the maximum number of results to be returned by the server. The server may further
     constrain the maximum number of results returned in a single page. If the page_size is 0, the
     server will decide the number of results to be returned.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * Specify the maximum number of results to be returned by the server. The server may further
       * constrain the maximum number of results returned in a single page. If the page_size is 0,
       * the server will decide the number of results to be returned.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** The next_page_token value returned from a previous List request, if any. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The next_page_token value returned from a previous List request, if any.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The next_page_token value returned from a previous List request, if any. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates information about a brand. *Caution*: If you update a field that takes a list as input,
     * you must include the entire list in the update request. Updates to list fields replace the entire
     * list.
     *
     * Create a request for the method "brands.patch".
     *
     * This request holds the parameters needed by the businesscommunications server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Output only. The unique identifier of the brand. Defined by the platform.
     * @param content the {@link com.google.api.services.businesscommunications.v1.model.Brand}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.Brand content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Brand> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^brands/[^/]+$");

      /**
       * Updates information about a brand. *Caution*: If you update a field that takes a list as input,
       * you must include the entire list in the update request. Updates to list fields replace the
       * entire list.
       *
       * Create a request for the method "brands.patch".
       *
       * This request holds the parameters needed by the the businesscommunications server.  After
       * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
       * operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Output only. The unique identifier of the brand. Defined by the platform.
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.Brand}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.Brand content) {
        super(BusinessCommunications.this, "PATCH", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.Brand.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^brands/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /** Output only. The unique identifier of the brand. Defined by the platform. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. The unique identifier of the brand. Defined by the platform.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Output only. The unique identifier of the brand. Defined by the platform. */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^brands/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * The update mask applies to the resource. For the FieldMask definition, see
       * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** The update mask applies to the resource. For the FieldMask definition, see
     https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * The update mask applies to the resource. For the FieldMask definition, see
       * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Agents collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BusinessCommunications businesscommunications = new BusinessCommunications(...);}
     *   {@code BusinessCommunications.Agents.List request = businesscommunications.agents().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Agents agents() {
      return new Agents();
    }

    /**
     * The "agents" collection of methods.
     */
    public class Agents {

      /**
       * Creates a new agent to represent a brand.
       *
       * Create a request for the method "agents.create".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The unique identifier of the brand the agent represents. If the brand identifier is
       *        "1234", this parameter is "brands/1234".
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.Agent}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.businesscommunications.v1.model.Agent content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Agent> {

        private static final String REST_PATH = "v1/{+parent}/agents";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+$");

        /**
         * Creates a new agent to represent a brand.
         *
         * Create a request for the method "agents.create".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The unique identifier of the brand the agent represents. If the brand identifier is
       *        "1234", this parameter is "brands/1234".
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.Agent}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.businesscommunications.v1.model.Agent content) {
          super(BusinessCommunications.this, "POST", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.Agent.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^brands/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the brand the agent represents. If the brand
         * identifier is "1234", this parameter is "brands/1234".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The unique identifier of the brand the agent represents. If the brand identifier is
       "1234", this parameter is "brands/1234".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The unique identifier of the brand the agent represents. If the brand
         * identifier is "1234", this parameter is "brands/1234".
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^brands/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an agent. The delete request fails if any `brands.agents.requestVerification` requests
       * have been made for the agent.
       *
       * Create a request for the method "agents.delete".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
       *        identifier is "5678", this parameter resolves to "brands/1234/agents/5668".
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/agents/[^/]+$");

        /**
         * Deletes an agent. The delete request fails if any `brands.agents.requestVerification` requests
         * have been made for the agent.
         *
         * Create a request for the method "agents.delete".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
       *        identifier is "5678", this parameter resolves to "brands/1234/agents/5668".
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(BusinessCommunications.this, "DELETE", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the agent. If the brand identifier is "1234" and the
         * agent identifier is "5678", this parameter resolves to "brands/1234/agents/5668".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
       identifier is "5678", this parameter resolves to "brands/1234/agents/5668".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the agent. If the brand identifier is "1234" and the
         * agent identifier is "5678", this parameter resolves to "brands/1234/agents/5668".
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Get information about an agent.
       *
       * Create a request for the method "agents.get".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
       *        identifier is "5678", this parameter resolves to "brands/1234/agents/5668".
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Agent> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/agents/[^/]+$");

        /**
         * Get information about an agent.
         *
         * Create a request for the method "agents.get".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
       *        identifier is "5678", this parameter resolves to "brands/1234/agents/5668".
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.Agent.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the agent. If the brand identifier is "1234" and the
         * agent identifier is "5678", this parameter resolves to "brands/1234/agents/5668".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
       identifier is "5678", this parameter resolves to "brands/1234/agents/5668".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the agent. If the brand identifier is "1234" and the
         * agent identifier is "5678", this parameter resolves to "brands/1234/agents/5668".
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the launch information for an agent.
       *
       * Create a request for the method "agents.getLaunch".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link GetLaunch#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the agent launch.
       * @return the request
       */
      public GetLaunch getLaunch(java.lang.String name) throws java.io.IOException {
        GetLaunch result = new GetLaunch(name);
        initialize(result);
        return result;
      }

      public class GetLaunch extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.AgentLaunch> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/agents/[^/]+/launch$");

        /**
         * Gets the launch information for an agent.
         *
         * Create a request for the method "agents.getLaunch".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link GetLaunch#execute()} method to invoke the
         * remote operation. <p> {@link
         * GetLaunch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the agent launch.
         * @since 1.13
         */
        protected GetLaunch(java.lang.String name) {
          super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.AgentLaunch.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+/launch$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetLaunch set$Xgafv(java.lang.String $Xgafv) {
          return (GetLaunch) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetLaunch setAccessToken(java.lang.String accessToken) {
          return (GetLaunch) super.setAccessToken(accessToken);
        }

        @Override
        public GetLaunch setAlt(java.lang.String alt) {
          return (GetLaunch) super.setAlt(alt);
        }

        @Override
        public GetLaunch setCallback(java.lang.String callback) {
          return (GetLaunch) super.setCallback(callback);
        }

        @Override
        public GetLaunch setFields(java.lang.String fields) {
          return (GetLaunch) super.setFields(fields);
        }

        @Override
        public GetLaunch setKey(java.lang.String key) {
          return (GetLaunch) super.setKey(key);
        }

        @Override
        public GetLaunch setOauthToken(java.lang.String oauthToken) {
          return (GetLaunch) super.setOauthToken(oauthToken);
        }

        @Override
        public GetLaunch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetLaunch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetLaunch setQuotaUser(java.lang.String quotaUser) {
          return (GetLaunch) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetLaunch setUploadType(java.lang.String uploadType) {
          return (GetLaunch) super.setUploadType(uploadType);
        }

        @Override
        public GetLaunch setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetLaunch) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The unique identifier of the agent launch. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the agent launch.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The unique identifier of the agent launch. */
        public GetLaunch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+/launch$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetLaunch set(String parameterName, Object value) {
          return (GetLaunch) super.set(parameterName, value);
        }
      }
      /**
       * Gets the verification information for an agent.
       *
       * Create a request for the method "agents.getVerification".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link GetVerification#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The unique identifier of the brand and agent verification.
       * @return the request
       */
      public GetVerification getVerification(java.lang.String name) throws java.io.IOException {
        GetVerification result = new GetVerification(name);
        initialize(result);
        return result;
      }

      public class GetVerification extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.AgentVerification> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/agents/[^/]+/verification$");

        /**
         * Gets the verification information for an agent.
         *
         * Create a request for the method "agents.getVerification".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link GetVerification#execute()} method to invoke
         * the remote operation. <p> {@link GetVerification#initialize(com.google.api.client.googleapis.se
         * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the brand and agent verification.
         * @since 1.13
         */
        protected GetVerification(java.lang.String name) {
          super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.AgentVerification.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+/verification$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetVerification set$Xgafv(java.lang.String $Xgafv) {
          return (GetVerification) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetVerification setAccessToken(java.lang.String accessToken) {
          return (GetVerification) super.setAccessToken(accessToken);
        }

        @Override
        public GetVerification setAlt(java.lang.String alt) {
          return (GetVerification) super.setAlt(alt);
        }

        @Override
        public GetVerification setCallback(java.lang.String callback) {
          return (GetVerification) super.setCallback(callback);
        }

        @Override
        public GetVerification setFields(java.lang.String fields) {
          return (GetVerification) super.setFields(fields);
        }

        @Override
        public GetVerification setKey(java.lang.String key) {
          return (GetVerification) super.setKey(key);
        }

        @Override
        public GetVerification setOauthToken(java.lang.String oauthToken) {
          return (GetVerification) super.setOauthToken(oauthToken);
        }

        @Override
        public GetVerification setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetVerification) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetVerification setQuotaUser(java.lang.String quotaUser) {
          return (GetVerification) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetVerification setUploadType(java.lang.String uploadType) {
          return (GetVerification) super.setUploadType(uploadType);
        }

        @Override
        public GetVerification setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetVerification) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The unique identifier of the brand and agent verification. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the brand and agent verification.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The unique identifier of the brand and agent verification. */
        public GetVerification setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+/verification$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetVerification set(String parameterName, Object value) {
          return (GetVerification) super.set(parameterName, value);
        }
      }
      /**
       * Lists all the agents associated with a brand. *Note*: This method always sets `pageSize` to `0`.
       *
       * Create a request for the method "agents.list".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
       *        resolves to "brands/1234".
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.ListAgentsResponse> {

        private static final String REST_PATH = "v1/{+parent}/agents";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+$");

        /**
         * Lists all the agents associated with a brand. *Note*: This method always sets `pageSize` to
         * `0`.
         *
         * Create a request for the method "agents.list".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
       *        resolves to "brands/1234".
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.ListAgentsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^brands/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the brand. If the brand identifier is "1234", this
         * parameter resolves to "brands/1234".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
       resolves to "brands/1234".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The unique identifier of the brand. If the brand identifier is "1234", this
         * parameter resolves to "brands/1234".
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^brands/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Specify the maximum number of results to be returned by the server. The server may
         * further constrain the maximum number of results returned in a single page. If the
         * page_size is 0, the server will decide the number of results to be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Specify the maximum number of results to be returned by the server. The server may further
       constrain the maximum number of results returned in a single page. If the page_size is 0, the
       server will decide the number of results to be returned.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Specify the maximum number of results to be returned by the server. The server may
         * further constrain the maximum number of results returned in a single page. If the
         * page_size is 0, the server will decide the number of results to be returned.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous List request, if any.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates information about an agent. *Caution*: If you update a field that takes a list as input,
       * you must include the entire list in the update request. Updates to list fields replace the entire
       * list.
       *
       * Create a request for the method "agents.patch".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The unique identifier of the agent. Read-only. Defined by the platform.
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.Agent}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.Agent content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Agent> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/agents/[^/]+$");

        /**
         * Updates information about an agent. *Caution*: If you update a field that takes a list as
         * input, you must include the entire list in the update request. Updates to list fields replace
         * the entire list.
         *
         * Create a request for the method "agents.patch".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The unique identifier of the agent. Read-only. Defined by the platform.
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.Agent}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.Agent content) {
          super(BusinessCommunications.this, "PATCH", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.Agent.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** The unique identifier of the agent. Read-only. Defined by the platform. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The unique identifier of the agent. Read-only. Defined by the platform.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The unique identifier of the agent. Read-only. Defined by the platform. */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The update mask applies to the resource. For the FieldMask definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask applies to the resource. For the FieldMask definition, see
       https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask applies to the resource. For the FieldMask definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Begins the launch process for an agent. An agent is available to users after it launches. An
       * agent can only have one instance of launch at a time.
       *
       * Create a request for the method "agents.requestLaunch".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link RequestLaunch#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
       *        identifier is "5678", this parameter resolves to "brands/1234/agents/5678".
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.RequestAgentLaunchRequest}
       * @return the request
       */
      public RequestLaunch requestLaunch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.RequestAgentLaunchRequest content) throws java.io.IOException {
        RequestLaunch result = new RequestLaunch(name, content);
        initialize(result);
        return result;
      }

      public class RequestLaunch extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.AgentLaunch> {

        private static final String REST_PATH = "v1/{+name}:requestLaunch";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/agents/[^/]+$");

        /**
         * Begins the launch process for an agent. An agent is available to users after it launches. An
         * agent can only have one instance of launch at a time.
         *
         * Create a request for the method "agents.requestLaunch".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link RequestLaunch#execute()} method to invoke the
         * remote operation. <p> {@link RequestLaunch#initialize(com.google.api.client.googleapis.services
         * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
       *        identifier is "5678", this parameter resolves to "brands/1234/agents/5678".
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.RequestAgentLaunchRequest}
         * @since 1.13
         */
        protected RequestLaunch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.RequestAgentLaunchRequest content) {
          super(BusinessCommunications.this, "POST", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.AgentLaunch.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+$");
          }
        }

        @Override
        public RequestLaunch set$Xgafv(java.lang.String $Xgafv) {
          return (RequestLaunch) super.set$Xgafv($Xgafv);
        }

        @Override
        public RequestLaunch setAccessToken(java.lang.String accessToken) {
          return (RequestLaunch) super.setAccessToken(accessToken);
        }

        @Override
        public RequestLaunch setAlt(java.lang.String alt) {
          return (RequestLaunch) super.setAlt(alt);
        }

        @Override
        public RequestLaunch setCallback(java.lang.String callback) {
          return (RequestLaunch) super.setCallback(callback);
        }

        @Override
        public RequestLaunch setFields(java.lang.String fields) {
          return (RequestLaunch) super.setFields(fields);
        }

        @Override
        public RequestLaunch setKey(java.lang.String key) {
          return (RequestLaunch) super.setKey(key);
        }

        @Override
        public RequestLaunch setOauthToken(java.lang.String oauthToken) {
          return (RequestLaunch) super.setOauthToken(oauthToken);
        }

        @Override
        public RequestLaunch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (RequestLaunch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public RequestLaunch setQuotaUser(java.lang.String quotaUser) {
          return (RequestLaunch) super.setQuotaUser(quotaUser);
        }

        @Override
        public RequestLaunch setUploadType(java.lang.String uploadType) {
          return (RequestLaunch) super.setUploadType(uploadType);
        }

        @Override
        public RequestLaunch setUploadProtocol(java.lang.String uploadProtocol) {
          return (RequestLaunch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the agent. If the brand identifier is "1234" and the
         * agent identifier is "5678", this parameter resolves to "brands/1234/agents/5678".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
       identifier is "5678", this parameter resolves to "brands/1234/agents/5678".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the agent. If the brand identifier is "1234" and the
         * agent identifier is "5678", this parameter resolves to "brands/1234/agents/5678".
         */
        public RequestLaunch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public RequestLaunch set(String parameterName, Object value) {
          return (RequestLaunch) super.set(parameterName, value);
        }
      }
      /**
       * Begins business information verification for an agent. Google contacts the brand for
       * verification. Only 1 instance of verification is allowed at any given time.
       *
       * Create a request for the method "agents.requestVerification".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link RequestVerification#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The unique identifier of the brand and agent.
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.RequestAgentVerificationRequest}
       * @return the request
       */
      public RequestVerification requestVerification(java.lang.String name, com.google.api.services.businesscommunications.v1.model.RequestAgentVerificationRequest content) throws java.io.IOException {
        RequestVerification result = new RequestVerification(name, content);
        initialize(result);
        return result;
      }

      public class RequestVerification extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.AgentVerification> {

        private static final String REST_PATH = "v1/{+name}:requestVerification";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/agents/[^/]+$");

        /**
         * Begins business information verification for an agent. Google contacts the brand for
         * verification. Only 1 instance of verification is allowed at any given time.
         *
         * Create a request for the method "agents.requestVerification".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link RequestVerification#execute()} method to
         * invoke the remote operation. <p> {@link RequestVerification#initialize(com.google.api.client.go
         * ogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the brand and agent.
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.RequestAgentVerificationRequest}
         * @since 1.13
         */
        protected RequestVerification(java.lang.String name, com.google.api.services.businesscommunications.v1.model.RequestAgentVerificationRequest content) {
          super(BusinessCommunications.this, "POST", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.AgentVerification.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+$");
          }
        }

        @Override
        public RequestVerification set$Xgafv(java.lang.String $Xgafv) {
          return (RequestVerification) super.set$Xgafv($Xgafv);
        }

        @Override
        public RequestVerification setAccessToken(java.lang.String accessToken) {
          return (RequestVerification) super.setAccessToken(accessToken);
        }

        @Override
        public RequestVerification setAlt(java.lang.String alt) {
          return (RequestVerification) super.setAlt(alt);
        }

        @Override
        public RequestVerification setCallback(java.lang.String callback) {
          return (RequestVerification) super.setCallback(callback);
        }

        @Override
        public RequestVerification setFields(java.lang.String fields) {
          return (RequestVerification) super.setFields(fields);
        }

        @Override
        public RequestVerification setKey(java.lang.String key) {
          return (RequestVerification) super.setKey(key);
        }

        @Override
        public RequestVerification setOauthToken(java.lang.String oauthToken) {
          return (RequestVerification) super.setOauthToken(oauthToken);
        }

        @Override
        public RequestVerification setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (RequestVerification) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public RequestVerification setQuotaUser(java.lang.String quotaUser) {
          return (RequestVerification) super.setQuotaUser(quotaUser);
        }

        @Override
        public RequestVerification setUploadType(java.lang.String uploadType) {
          return (RequestVerification) super.setUploadType(uploadType);
        }

        @Override
        public RequestVerification setUploadProtocol(java.lang.String uploadProtocol) {
          return (RequestVerification) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The unique identifier of the brand and agent. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the brand and agent.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The unique identifier of the brand and agent. */
        public RequestVerification setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public RequestVerification set(String parameterName, Object value) {
          return (RequestVerification) super.set(parameterName, value);
        }
      }
      /**
       * Updates the launch information for an agent.
       *
       * Create a request for the method "agents.updateLaunch".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link UpdateLaunch#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The identifier for launch.
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.AgentLaunch}
       * @return the request
       */
      public UpdateLaunch updateLaunch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.AgentLaunch content) throws java.io.IOException {
        UpdateLaunch result = new UpdateLaunch(name, content);
        initialize(result);
        return result;
      }

      public class UpdateLaunch extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.AgentLaunch> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/agents/[^/]+/launch$");

        /**
         * Updates the launch information for an agent.
         *
         * Create a request for the method "agents.updateLaunch".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link UpdateLaunch#execute()} method to invoke the
         * remote operation. <p> {@link
         * UpdateLaunch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The identifier for launch.
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.AgentLaunch}
         * @since 1.13
         */
        protected UpdateLaunch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.AgentLaunch content) {
          super(BusinessCommunications.this, "PATCH", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.AgentLaunch.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+/launch$");
          }
        }

        @Override
        public UpdateLaunch set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateLaunch) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateLaunch setAccessToken(java.lang.String accessToken) {
          return (UpdateLaunch) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateLaunch setAlt(java.lang.String alt) {
          return (UpdateLaunch) super.setAlt(alt);
        }

        @Override
        public UpdateLaunch setCallback(java.lang.String callback) {
          return (UpdateLaunch) super.setCallback(callback);
        }

        @Override
        public UpdateLaunch setFields(java.lang.String fields) {
          return (UpdateLaunch) super.setFields(fields);
        }

        @Override
        public UpdateLaunch setKey(java.lang.String key) {
          return (UpdateLaunch) super.setKey(key);
        }

        @Override
        public UpdateLaunch setOauthToken(java.lang.String oauthToken) {
          return (UpdateLaunch) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateLaunch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateLaunch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateLaunch setQuotaUser(java.lang.String quotaUser) {
          return (UpdateLaunch) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateLaunch setUploadType(java.lang.String uploadType) {
          return (UpdateLaunch) super.setUploadType(uploadType);
        }

        @Override
        public UpdateLaunch setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateLaunch) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The identifier for launch. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The identifier for launch.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The identifier for launch. */
        public UpdateLaunch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+/launch$");
          }
          this.name = name;
          return this;
        }

        /**
         * The update mask applies to the resource. For the FieldMask definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask applies to the resource. For the FieldMask definition, see
       https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask applies to the resource. For the FieldMask definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public UpdateLaunch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateLaunch set(String parameterName, Object value) {
          return (UpdateLaunch) super.set(parameterName, value);
        }
      }
      /**
       * Updates the verification state for an agent.
       *
       * Create a request for the method "agents.updateVerification".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link UpdateVerification#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The identifier for verification.
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.AgentVerification}
       * @return the request
       */
      public UpdateVerification updateVerification(java.lang.String name, com.google.api.services.businesscommunications.v1.model.AgentVerification content) throws java.io.IOException {
        UpdateVerification result = new UpdateVerification(name, content);
        initialize(result);
        return result;
      }

      public class UpdateVerification extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.AgentVerification> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/agents/[^/]+/verification$");

        /**
         * Updates the verification state for an agent.
         *
         * Create a request for the method "agents.updateVerification".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link UpdateVerification#execute()} method to invoke
         * the remote operation. <p> {@link UpdateVerification#initialize(com.google.api.client.googleapis
         * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name Required. The identifier for verification.
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.AgentVerification}
         * @since 1.13
         */
        protected UpdateVerification(java.lang.String name, com.google.api.services.businesscommunications.v1.model.AgentVerification content) {
          super(BusinessCommunications.this, "PATCH", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.AgentVerification.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+/verification$");
          }
        }

        @Override
        public UpdateVerification set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateVerification) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateVerification setAccessToken(java.lang.String accessToken) {
          return (UpdateVerification) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateVerification setAlt(java.lang.String alt) {
          return (UpdateVerification) super.setAlt(alt);
        }

        @Override
        public UpdateVerification setCallback(java.lang.String callback) {
          return (UpdateVerification) super.setCallback(callback);
        }

        @Override
        public UpdateVerification setFields(java.lang.String fields) {
          return (UpdateVerification) super.setFields(fields);
        }

        @Override
        public UpdateVerification setKey(java.lang.String key) {
          return (UpdateVerification) super.setKey(key);
        }

        @Override
        public UpdateVerification setOauthToken(java.lang.String oauthToken) {
          return (UpdateVerification) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateVerification setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateVerification) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateVerification setQuotaUser(java.lang.String quotaUser) {
          return (UpdateVerification) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateVerification setUploadType(java.lang.String uploadType) {
          return (UpdateVerification) super.setUploadType(uploadType);
        }

        @Override
        public UpdateVerification setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateVerification) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The identifier for verification. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The identifier for verification.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The identifier for verification. */
        public UpdateVerification setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/agents/[^/]+/verification$");
          }
          this.name = name;
          return this;
        }

        /**
         * The update mask applies to the resource. For the FieldMask definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask applies to the resource. For the FieldMask definition, see
       https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask applies to the resource. For the FieldMask definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public UpdateVerification setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateVerification set(String parameterName, Object value) {
          return (UpdateVerification) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BusinessCommunications businesscommunications = new BusinessCommunications(...);}
     *   {@code BusinessCommunications.Locations.List request = businesscommunications.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Creates a new location for a brand.
       *
       * Create a request for the method "locations.create".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The unique identifier of the brand associated with the location. If the brand identifier
       *        is "1234", this parameter resolves to "brands/1234".
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.Location}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.businesscommunications.v1.model.Location content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Location> {

        private static final String REST_PATH = "v1/{+parent}/locations";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+$");

        /**
         * Creates a new location for a brand.
         *
         * Create a request for the method "locations.create".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The unique identifier of the brand associated with the location. If the brand identifier
       *        is "1234", this parameter resolves to "brands/1234".
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.Location}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.businesscommunications.v1.model.Location content) {
          super(BusinessCommunications.this, "POST", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.Location.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^brands/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the brand associated with the location. If the brand
         * identifier is "1234", this parameter resolves to "brands/1234".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The unique identifier of the brand associated with the location. If the brand identifier
       is "1234", this parameter resolves to "brands/1234".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The unique identifier of the brand associated with the location. If the brand
         * identifier is "1234", this parameter resolves to "brands/1234".
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^brands/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a location. The delete request fails if any `brands.locations.requestVerification`
       * requests have been made for the location.
       *
       * Create a request for the method "locations.delete".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       *        identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/locations/[^/]+$");

        /**
         * Deletes a location. The delete request fails if any `brands.locations.requestVerification`
         * requests have been made for the location.
         *
         * Create a request for the method "locations.delete".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       *        identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(BusinessCommunications.this, "DELETE", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the location. If the brand identifier is "1234" and
         * the location identifier is "5678", this parameter resolves to
         * "brands/1234/locations/5678".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the location. If the brand identifier is "1234" and
         * the location identifier is "5678", this parameter resolves to
         * "brands/1234/locations/5678".
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Get information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       *        identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/locations/[^/]+$");

        /**
         * Get information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       *        identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the location. If the brand identifier is "1234" and
         * the location identifier is "5678", this parameter resolves to
         * "brands/1234/locations/5678".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the location. If the brand identifier is "1234" and
         * the location identifier is "5678", this parameter resolves to
         * "brands/1234/locations/5678".
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the launch information for a location.
       *
       * Create a request for the method "locations.getLaunch".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link GetLaunch#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the location launch.
       * @return the request
       */
      public GetLaunch getLaunch(java.lang.String name) throws java.io.IOException {
        GetLaunch result = new GetLaunch(name);
        initialize(result);
        return result;
      }

      public class GetLaunch extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.LocationLaunch> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/locations/[^/]+/launch$");

        /**
         * Gets the launch information for a location.
         *
         * Create a request for the method "locations.getLaunch".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link GetLaunch#execute()} method to invoke the
         * remote operation. <p> {@link
         * GetLaunch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the location launch.
         * @since 1.13
         */
        protected GetLaunch(java.lang.String name) {
          super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.LocationLaunch.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+/launch$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetLaunch set$Xgafv(java.lang.String $Xgafv) {
          return (GetLaunch) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetLaunch setAccessToken(java.lang.String accessToken) {
          return (GetLaunch) super.setAccessToken(accessToken);
        }

        @Override
        public GetLaunch setAlt(java.lang.String alt) {
          return (GetLaunch) super.setAlt(alt);
        }

        @Override
        public GetLaunch setCallback(java.lang.String callback) {
          return (GetLaunch) super.setCallback(callback);
        }

        @Override
        public GetLaunch setFields(java.lang.String fields) {
          return (GetLaunch) super.setFields(fields);
        }

        @Override
        public GetLaunch setKey(java.lang.String key) {
          return (GetLaunch) super.setKey(key);
        }

        @Override
        public GetLaunch setOauthToken(java.lang.String oauthToken) {
          return (GetLaunch) super.setOauthToken(oauthToken);
        }

        @Override
        public GetLaunch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetLaunch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetLaunch setQuotaUser(java.lang.String quotaUser) {
          return (GetLaunch) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetLaunch setUploadType(java.lang.String uploadType) {
          return (GetLaunch) super.setUploadType(uploadType);
        }

        @Override
        public GetLaunch setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetLaunch) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The unique identifier of the location launch. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the location launch.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The unique identifier of the location launch. */
        public GetLaunch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+/launch$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetLaunch set(String parameterName, Object value) {
          return (GetLaunch) super.set(parameterName, value);
        }
      }
      /**
       * Gets the verification information for a location.
       *
       * Create a request for the method "locations.getVerification".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link GetVerification#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The unique identifier of the location verification.
       * @return the request
       */
      public GetVerification getVerification(java.lang.String name) throws java.io.IOException {
        GetVerification result = new GetVerification(name);
        initialize(result);
        return result;
      }

      public class GetVerification extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.LocationVerification> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/locations/[^/]+/verification$");

        /**
         * Gets the verification information for a location.
         *
         * Create a request for the method "locations.getVerification".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link GetVerification#execute()} method to invoke
         * the remote operation. <p> {@link GetVerification#initialize(com.google.api.client.googleapis.se
         * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the location verification.
         * @since 1.13
         */
        protected GetVerification(java.lang.String name) {
          super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.LocationVerification.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+/verification$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetVerification set$Xgafv(java.lang.String $Xgafv) {
          return (GetVerification) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetVerification setAccessToken(java.lang.String accessToken) {
          return (GetVerification) super.setAccessToken(accessToken);
        }

        @Override
        public GetVerification setAlt(java.lang.String alt) {
          return (GetVerification) super.setAlt(alt);
        }

        @Override
        public GetVerification setCallback(java.lang.String callback) {
          return (GetVerification) super.setCallback(callback);
        }

        @Override
        public GetVerification setFields(java.lang.String fields) {
          return (GetVerification) super.setFields(fields);
        }

        @Override
        public GetVerification setKey(java.lang.String key) {
          return (GetVerification) super.setKey(key);
        }

        @Override
        public GetVerification setOauthToken(java.lang.String oauthToken) {
          return (GetVerification) super.setOauthToken(oauthToken);
        }

        @Override
        public GetVerification setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetVerification) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetVerification setQuotaUser(java.lang.String quotaUser) {
          return (GetVerification) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetVerification setUploadType(java.lang.String uploadType) {
          return (GetVerification) super.setUploadType(uploadType);
        }

        @Override
        public GetVerification setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetVerification) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The unique identifier of the location verification. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the location verification.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The unique identifier of the location verification. */
        public GetVerification setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+/verification$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetVerification set(String parameterName, Object value) {
          return (GetVerification) super.set(parameterName, value);
        }
      }
      /**
       * Lists all the locations for a brand. *Note*: This method always sets `pageSize` to `0`.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
       *        resolves to "brands/1234".
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1/{+parent}/locations";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+$");

        /**
         * Lists all the locations for a brand. *Note*: This method always sets `pageSize` to `0`.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
       *        resolves to "brands/1234".
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.ListLocationsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^brands/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the brand. If the brand identifier is "1234", this
         * parameter resolves to "brands/1234".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
       resolves to "brands/1234".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The unique identifier of the brand. If the brand identifier is "1234", this
         * parameter resolves to "brands/1234".
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^brands/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of results to be returned by the server. The server may further
         * constrain the maximum number of results returned in a single page. If the page_size is 0,
         * the server will decide the number of results to be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to be returned by the server. The server may further constrain the
       maximum number of results returned in a single page. If the page_size is 0, the server will decide
       the number of results to be returned.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of results to be returned by the server. The server may further
         * constrain the maximum number of results returned in a single page. If the page_size is 0,
         * the server will decide the number of results to be returned.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous List request, if any.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates information about a location. *Caution*: If you update a field that takes a list as
       * input, you must include the entire list in the update request. Updates to list fields replace the
       * entire list.
       *
       * Create a request for the method "locations.patch".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The unique identifier of the location. Read-only. Defined by the platform.
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.Location}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.Location content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/locations/[^/]+$");

        /**
         * Updates information about a location. *Caution*: If you update a field that takes a list as
         * input, you must include the entire list in the update request. Updates to list fields replace
         * the entire list.
         *
         * Create a request for the method "locations.patch".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The unique identifier of the location. Read-only. Defined by the platform.
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.Location}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.Location content) {
          super(BusinessCommunications.this, "PATCH", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** The unique identifier of the location. Read-only. Defined by the platform. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The unique identifier of the location. Read-only. Defined by the platform.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The unique identifier of the location. Read-only. Defined by the platform. */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The update mask applies to the resource. For the FieldMask definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask applies to the resource. For the FieldMask definition, see
       https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask applies to the resource. For the FieldMask definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Begins the launch process for a location. A location is available to users after it launches. A
       * location can only have one instance of launch at a time. If the location hasn't been launched
       * previously, sets the launch status to `PENDING`.
       *
       * Create a request for the method "locations.requestLaunch".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link RequestLaunch#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       *        identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.RequestLocationLaunchRequest}
       * @return the request
       */
      public RequestLaunch requestLaunch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.RequestLocationLaunchRequest content) throws java.io.IOException {
        RequestLaunch result = new RequestLaunch(name, content);
        initialize(result);
        return result;
      }

      public class RequestLaunch extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.LocationLaunch> {

        private static final String REST_PATH = "v1/{+name}:requestLaunch";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/locations/[^/]+$");

        /**
         * Begins the launch process for a location. A location is available to users after it launches. A
         * location can only have one instance of launch at a time. If the location hasn't been launched
         * previously, sets the launch status to `PENDING`.
         *
         * Create a request for the method "locations.requestLaunch".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link RequestLaunch#execute()} method to invoke the
         * remote operation. <p> {@link RequestLaunch#initialize(com.google.api.client.googleapis.services
         * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       *        identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.RequestLocationLaunchRequest}
         * @since 1.13
         */
        protected RequestLaunch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.RequestLocationLaunchRequest content) {
          super(BusinessCommunications.this, "POST", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.LocationLaunch.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public RequestLaunch set$Xgafv(java.lang.String $Xgafv) {
          return (RequestLaunch) super.set$Xgafv($Xgafv);
        }

        @Override
        public RequestLaunch setAccessToken(java.lang.String accessToken) {
          return (RequestLaunch) super.setAccessToken(accessToken);
        }

        @Override
        public RequestLaunch setAlt(java.lang.String alt) {
          return (RequestLaunch) super.setAlt(alt);
        }

        @Override
        public RequestLaunch setCallback(java.lang.String callback) {
          return (RequestLaunch) super.setCallback(callback);
        }

        @Override
        public RequestLaunch setFields(java.lang.String fields) {
          return (RequestLaunch) super.setFields(fields);
        }

        @Override
        public RequestLaunch setKey(java.lang.String key) {
          return (RequestLaunch) super.setKey(key);
        }

        @Override
        public RequestLaunch setOauthToken(java.lang.String oauthToken) {
          return (RequestLaunch) super.setOauthToken(oauthToken);
        }

        @Override
        public RequestLaunch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (RequestLaunch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public RequestLaunch setQuotaUser(java.lang.String quotaUser) {
          return (RequestLaunch) super.setQuotaUser(quotaUser);
        }

        @Override
        public RequestLaunch setUploadType(java.lang.String uploadType) {
          return (RequestLaunch) super.setUploadType(uploadType);
        }

        @Override
        public RequestLaunch setUploadProtocol(java.lang.String uploadProtocol) {
          return (RequestLaunch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the location. If the brand identifier is "1234" and
         * the location identifier is "5678", this parameter resolves to
         * "brands/1234/locations/5678".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the location. If the brand identifier is "1234" and
         * the location identifier is "5678", this parameter resolves to
         * "brands/1234/locations/5678".
         */
        public RequestLaunch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public RequestLaunch set(String parameterName, Object value) {
          return (RequestLaunch) super.set(parameterName, value);
        }
      }
      /**
       * Begins verification for a location. A location is available for use after it's verified. A
       * location can only have one instance of verification at a time. If the location status hasn't been
       * verified previously, sets the status to `PENDING`.
       *
       * Create a request for the method "locations.requestVerification".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link RequestVerification#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       *        identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.RequestLocationVerificationRequest}
       * @return the request
       */
      public RequestVerification requestVerification(java.lang.String name, com.google.api.services.businesscommunications.v1.model.RequestLocationVerificationRequest content) throws java.io.IOException {
        RequestVerification result = new RequestVerification(name, content);
        initialize(result);
        return result;
      }

      public class RequestVerification extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.LocationVerification> {

        private static final String REST_PATH = "v1/{+name}:requestVerification";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/locations/[^/]+$");

        /**
         * Begins verification for a location. A location is available for use after it's verified. A
         * location can only have one instance of verification at a time. If the location status hasn't
         * been verified previously, sets the status to `PENDING`.
         *
         * Create a request for the method "locations.requestVerification".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link RequestVerification#execute()} method to
         * invoke the remote operation. <p> {@link RequestVerification#initialize(com.google.api.client.go
         * ogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       *        identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.RequestLocationVerificationRequest}
         * @since 1.13
         */
        protected RequestVerification(java.lang.String name, com.google.api.services.businesscommunications.v1.model.RequestLocationVerificationRequest content) {
          super(BusinessCommunications.this, "POST", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.LocationVerification.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public RequestVerification set$Xgafv(java.lang.String $Xgafv) {
          return (RequestVerification) super.set$Xgafv($Xgafv);
        }

        @Override
        public RequestVerification setAccessToken(java.lang.String accessToken) {
          return (RequestVerification) super.setAccessToken(accessToken);
        }

        @Override
        public RequestVerification setAlt(java.lang.String alt) {
          return (RequestVerification) super.setAlt(alt);
        }

        @Override
        public RequestVerification setCallback(java.lang.String callback) {
          return (RequestVerification) super.setCallback(callback);
        }

        @Override
        public RequestVerification setFields(java.lang.String fields) {
          return (RequestVerification) super.setFields(fields);
        }

        @Override
        public RequestVerification setKey(java.lang.String key) {
          return (RequestVerification) super.setKey(key);
        }

        @Override
        public RequestVerification setOauthToken(java.lang.String oauthToken) {
          return (RequestVerification) super.setOauthToken(oauthToken);
        }

        @Override
        public RequestVerification setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (RequestVerification) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public RequestVerification setQuotaUser(java.lang.String quotaUser) {
          return (RequestVerification) super.setQuotaUser(quotaUser);
        }

        @Override
        public RequestVerification setUploadType(java.lang.String uploadType) {
          return (RequestVerification) super.setUploadType(uploadType);
        }

        @Override
        public RequestVerification setUploadProtocol(java.lang.String uploadProtocol) {
          return (RequestVerification) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the location. If the brand identifier is "1234" and
         * the location identifier is "5678", this parameter resolves to
         * "brands/1234/locations/5678".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the location. If the brand identifier is "1234" and the location
       identifier is "5678", this parameter resolves to "brands/1234/locations/5678".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the location. If the brand identifier is "1234" and
         * the location identifier is "5678", this parameter resolves to
         * "brands/1234/locations/5678".
         */
        public RequestVerification setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public RequestVerification set(String parameterName, Object value) {
          return (RequestVerification) super.set(parameterName, value);
        }
      }
      /**
       * Updates the launch information for a location.
       *
       * Create a request for the method "locations.updateLaunch".
       *
       * This request holds the parameters needed by the businesscommunications server.  After setting any
       * optional parameters, call the {@link UpdateLaunch#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The identifier for launch.
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.LocationLaunch}
       * @return the request
       */
      public UpdateLaunch updateLaunch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.LocationLaunch content) throws java.io.IOException {
        UpdateLaunch result = new UpdateLaunch(name, content);
        initialize(result);
        return result;
      }

      public class UpdateLaunch extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.LocationLaunch> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^brands/[^/]+/locations/[^/]+/launch$");

        /**
         * Updates the launch information for a location.
         *
         * Create a request for the method "locations.updateLaunch".
         *
         * This request holds the parameters needed by the the businesscommunications server.  After
         * setting any optional parameters, call the {@link UpdateLaunch#execute()} method to invoke the
         * remote operation. <p> {@link
         * UpdateLaunch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The identifier for launch.
         * @param content the {@link com.google.api.services.businesscommunications.v1.model.LocationLaunch}
         * @since 1.13
         */
        protected UpdateLaunch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.LocationLaunch content) {
          super(BusinessCommunications.this, "PATCH", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.LocationLaunch.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+/launch$");
          }
        }

        @Override
        public UpdateLaunch set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateLaunch) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateLaunch setAccessToken(java.lang.String accessToken) {
          return (UpdateLaunch) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateLaunch setAlt(java.lang.String alt) {
          return (UpdateLaunch) super.setAlt(alt);
        }

        @Override
        public UpdateLaunch setCallback(java.lang.String callback) {
          return (UpdateLaunch) super.setCallback(callback);
        }

        @Override
        public UpdateLaunch setFields(java.lang.String fields) {
          return (UpdateLaunch) super.setFields(fields);
        }

        @Override
        public UpdateLaunch setKey(java.lang.String key) {
          return (UpdateLaunch) super.setKey(key);
        }

        @Override
        public UpdateLaunch setOauthToken(java.lang.String oauthToken) {
          return (UpdateLaunch) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateLaunch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateLaunch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateLaunch setQuotaUser(java.lang.String quotaUser) {
          return (UpdateLaunch) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateLaunch setUploadType(java.lang.String uploadType) {
          return (UpdateLaunch) super.setUploadType(uploadType);
        }

        @Override
        public UpdateLaunch setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateLaunch) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The identifier for launch. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The identifier for launch.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The identifier for launch. */
        public UpdateLaunch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^brands/[^/]+/locations/[^/]+/launch$");
          }
          this.name = name;
          return this;
        }

        /**
         * The update mask applies to the resource. For the FieldMask definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask applies to the resource. For the FieldMask definition, see
       https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask applies to the resource. For the FieldMask definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         */
        public UpdateLaunch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateLaunch set(String parameterName, Object value) {
          return (UpdateLaunch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Partners collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BusinessCommunications businesscommunications = new BusinessCommunications(...);}
   *   {@code BusinessCommunications.Partners.List request = businesscommunications.partners().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Partners partners() {
    return new Partners();
  }

  /**
   * The "partners" collection of methods.
   */
  public class Partners {

    /**
     * Get the information about the partner.
     *
     * Create a request for the method "partners.get".
     *
     * This request holds the parameters needed by the businesscommunications server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Optional. The unique identifier of the partner.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Partner> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^partners/[^/]+$");

      /**
       * Get the information about the partner.
       *
       * Create a request for the method "partners.get".
       *
       * This request holds the parameters needed by the the businesscommunications server.  After
       * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
       * operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Optional. The unique identifier of the partner.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(BusinessCommunications.this, "GET", REST_PATH, null, com.google.api.services.businesscommunications.v1.model.Partner.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^partners/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Optional. The unique identifier of the partner. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Optional. The unique identifier of the partner.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Optional. The unique identifier of the partner. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^partners/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Updates the information for a partner.
     *
     * Create a request for the method "partners.patch".
     *
     * This request holds the parameters needed by the businesscommunications server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Output only. The unique identifier of the partner. Defined by the platform.
     * @param content the {@link com.google.api.services.businesscommunications.v1.model.Partner}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.Partner content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends BusinessCommunicationsRequest<com.google.api.services.businesscommunications.v1.model.Partner> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^partners/[^/]+$");

      /**
       * Updates the information for a partner.
       *
       * Create a request for the method "partners.patch".
       *
       * This request holds the parameters needed by the the businesscommunications server.  After
       * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
       * operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Output only. The unique identifier of the partner. Defined by the platform.
       * @param content the {@link com.google.api.services.businesscommunications.v1.model.Partner}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.businesscommunications.v1.model.Partner content) {
        super(BusinessCommunications.this, "PATCH", REST_PATH, content, com.google.api.services.businesscommunications.v1.model.Partner.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^partners/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /** Output only. The unique identifier of the partner. Defined by the platform. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. The unique identifier of the partner. Defined by the platform.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Output only. The unique identifier of the partner. Defined by the platform. */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^partners/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * The update mask applies to the resource. For the FieldMask definition, see
       * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** The update mask applies to the resource. For the FieldMask definition, see
     https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * The update mask applies to the resource. For the FieldMask definition, see
       * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link BusinessCommunications}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link BusinessCommunications}. */
    @Override
    public BusinessCommunications build() {
      return new BusinessCommunications(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BusinessCommunicationsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBusinessCommunicationsRequestInitializer(
        BusinessCommunicationsRequestInitializer businesscommunicationsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(businesscommunicationsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
