/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2020-09-17 08:43:04 EDT)
 * on 2020-09-17 at 12:43:15 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.businesscommunications.v1.model;

/**
 * Sender IDs and the countries they operate in.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Business Communications. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Sender extends com.google.api.client.json.GenericJson {

  /**
   * A country the sender ID operates in as an [ISO 3166 Alpha-2 country
   * code](https://www.iso.org/obp/ui/#search/code/). For example, "US" for the United States of
   * America.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String countryCode;

  /**
   * A sender ID—a long code (E.164 format), short code, national code, or alphanumeric
   * code—associated with the agent that can send SMS messages.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String senderId;

  /**
   * A country the sender ID operates in as an [ISO 3166 Alpha-2 country
   * code](https://www.iso.org/obp/ui/#search/code/). For example, "US" for the United States of
   * America.
   * @return value or {@code null} for none
   */
  public java.lang.String getCountryCode() {
    return countryCode;
  }

  /**
   * A country the sender ID operates in as an [ISO 3166 Alpha-2 country
   * code](https://www.iso.org/obp/ui/#search/code/). For example, "US" for the United States of
   * America.
   * @param countryCode countryCode or {@code null} for none
   */
  public Sender setCountryCode(java.lang.String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * A sender ID—a long code (E.164 format), short code, national code, or alphanumeric
   * code—associated with the agent that can send SMS messages.
   * @return value or {@code null} for none
   */
  public java.lang.String getSenderId() {
    return senderId;
  }

  /**
   * A sender ID—a long code (E.164 format), short code, national code, or alphanumeric
   * code—associated with the agent that can send SMS messages.
   * @param senderId senderId or {@code null} for none
   */
  public Sender setSenderId(java.lang.String senderId) {
    this.senderId = senderId;
    return this;
  }

  @Override
  public Sender set(String fieldName, Object value) {
    return (Sender) super.set(fieldName, value);
  }

  @Override
  public Sender clone() {
    return (Sender) super.clone();
  }

}
